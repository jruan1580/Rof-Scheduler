{
	"info": {
		"_postman_id": "08695ef0-ee01-4947-bbf1-6fce249b3e04",
		"name": "EventManagement",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Unauthorize",
			"item": [
				{
					"name": "Get Events Unauthorize",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", () => {\r",
									"  pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}:{{port}}/api/event/?date={{currentDate}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"event",
								""
							],
							"query": [
								{
									"key": "date",
									"value": "{{currentDate}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Event By Id Unauthorize",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", () => {\r",
									"  pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}:{{port}}/api/event/{{eventId}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"event",
								"{{eventId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Admin Login",
			"item": [
				{
					"name": "Admin Login Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Test token and id was returned\", () => {\r",
									"  pm.expect(jsonData).to.be.an(\"object\");\r",
									"  pm.expect(jsonData.accessToken).to.be.a(\"string\");  \r",
									"  pm.expect(jsonData.id).to.be.a(\"number\");\r",
									"});\r",
									"\r",
									"pm.environment.set(\"adminToken\", jsonData.accessToken);\r",
									"pm.environment.set(\"adminUserId\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Username\": \"jruan1580\",\r\n    \"Password\": \"TestPassword123!\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{authPort}}/api/authentication/login",
							"host": [
								"{{host}}"
							],
							"port": "{{authPort}}",
							"path": [
								"api",
								"authentication",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Ids for Add",
			"item": [
				{
					"name": "Get Pets",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"if (jsonData.length == 0){\r",
									"    pm.expect.fail(\"No pet returned.\");\r",
									"}else{\r",
									"    const firstPet = jsonData.pets[0];\r",
									"    pm.expect(firstPet.id).to.be.a(\"number\");\r",
									"    pm.environment.set(\"petId\", firstPet.id);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}:{{petPort}}/api/pet/?page=1&offset=10",
							"host": [
								"{{host}}"
							],
							"port": "{{petPort}}",
							"path": [
								"api",
								"pet",
								""
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "offset",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Pet Services",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"var services = jsonData.petServices;\r",
									"\r",
									"if (services.length == 0){\r",
									"    pm.expect.fail(\"No pet services returned.\");\r",
									"}else{\r",
									"    const firstPetService = services[0];\r",
									"    pm.expect(firstPetService.id).to.be.a(\"number\");\r",
									"    pm.environment.set(\"petServiceId\", firstPetService.id);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}:{{petServicePort}}/api/petservice?page=1&offset=10&keyword=postman",
							"host": [
								"{{host}}"
							],
							"port": "{{petServicePort}}",
							"path": [
								"api",
								"petservice"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "offset",
									"value": "10"
								},
								{
									"key": "keyword",
									"value": "postman"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Events",
			"item": [
				{
					"name": "Add Event - Id Error",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"  pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('currentDate', (new Date()).toJSON());\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"EmployeeId\": 0,\r\n    \"PetId\": 0,\r\n    \"PetServiceId\": 0,\r\n    \"EventDate\": {{currentDate}},\r\n    \"Completed\": false,\r\n    \"Canceled\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{port}}/api/event",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"event"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Event - No Event Date",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"  pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"EmployeeId\": {{adminUserId}},\r\n    \"PetId\": {{petId}},\r\n    \"PetServiceId\": {{petServiceId}},\r\n    \"EventDate\": null,\r\n    \"Completed\": false,\r\n    \"Canceled\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{port}}/api/event",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"event"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Event",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"EmployeeId\": {{adminUserId}},\r\n    \"PetId\": {{petId}},\r\n    \"PetServiceId\": {{petServiceId}},\r\n    \"EventDate\": {{currentDate}},\r\n    \"Completed\": false,\r\n    \"Canceled\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{port}}/api/event",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"event"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Event - Duplicate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"  pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"EmployeeId\": {{adminUserId}},\r\n    \"PetId\": {{petId}},\r\n    \"PetServiceId\": {{petServiceId}},\r\n    \"EventDate\": {{currentDate}},\r\n    \"Completed\": false,\r\n    \"Canceled\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{port}}/api/event",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"event"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Events By Date",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"if (jsonData.length == 0){\r",
									"    pm.expect.fail(\"No events returned.\");\r",
									"}else{\r",
									"    const firstEvent = jsonData[0];\r",
									"    pm.expect(firstEvent.id).to.be.a(\"number\");\r",
									"    pm.environment.set(\"eventId\", firstEvent.id);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}:{{port}}/api/event/?date={{currentDate}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"event",
								""
							],
							"query": [
								{
									"key": "date",
									"value": "{{currentDate}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Event By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminUserId}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}:{{port}}/api/event/{{eventId}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"event",
								"{{eventId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Event - Id Errors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"  pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Id\": {{eventId}},\r\n    \"EmployeeId\": 0,\r\n    \"PetId\": 0,\r\n    \"PetServiceId\": 0,\r\n    \"EventDate\": {{currentDate}},\r\n    \"Completed\": false,\r\n    \"Canceled\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{port}}/api/event",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"event"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Event - No Date",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"  pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Id\": {{eventId}},\r\n    \"EmployeeId\": 0,\r\n    \"PetId\": 0,\r\n    \"PetServiceId\": 0,\r\n    \"EventDate\": null,\r\n    \"Completed\": false,\r\n    \"Canceled\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{port}}/api/event",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"event"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Event",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Id\": {{eventId}},\r\n    \"EmployeeId\": {{adminUserId}},\r\n    \"PetId\": {{petId}},\r\n    \"PetServiceId\": {{petServiceId}},\r\n    \"EventDate\": {{currentDate}},\r\n    \"Completed\": true,\r\n    \"Canceled\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{port}}/api/event",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"event"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Delete",
			"item": [
				{
					"name": "Delete Event",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}:{{port}}/api/event/{{eventId}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"event",
								"{{eventId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Admin Logout",
			"item": [
				{
					"name": "Admin Logout Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{host}}:{{authPort}}/api/authentication/{{adminUserId}}/logout",
							"host": [
								"{{host}}"
							],
							"port": "{{authPort}}",
							"path": [
								"api",
								"authentication",
								"{{adminUserId}}",
								"logout"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}